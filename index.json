[{"authors":null,"categories":null,"content":"Jiacheng Wu is a Ph.D. student at The University of Washington\u0026rsquo;s Database Group under the supervision of Professor Dan Suciu. Previouly he was a researcher of database systems at ICT CAS. He obtained his M.S. degree from Department of Computer Science and Technology, Tsinghua University. Prior to Tsinghua, he was an undergradute student at Software College, Nankai University.\nHis current research interests lie in the broad areas of system research. He is also familiar with the architectures of several data platforms, especially MySQL, ClickHouse and Apache Spark. Meanwhile, He is very interested in building data-intensive systems that can efficiently scale in modern computing environments.\n  Download my resum√©.\n","date":1654992000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1654992000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://Jiacheng-Wu.github.io/author/jiacheng-wu/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jiacheng-wu/","section":"authors","summary":"Jiacheng Wu is a Ph.D. student at The University of Washington\u0026rsquo;s Database Group under the supervision of Professor Dan Suciu. Previouly he was a researcher of database systems at ICT CAS.","tags":null,"title":"Jiacheng Wu","type":"authors"},{"authors":["Jiacheng Wu","Jin Wang","Carlo Zaniolo"],"categories":[],"content":"","date":1654992000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654992000,"objectID":"9313eafce46498587526480af1086396","permalink":"https://Jiacheng-Wu.github.io/publication/sigmod22/","publishdate":"2021-12-14T00:00:00Z","relpermalink":"/publication/sigmod22/","section":"publication","summary":"Over the past years, there has been a resurgence of interest in Datalog due to its superior ability of expressing applications that require recursive computations. However, in addition to expressive power, supporting analytical tasks with ever-increasing volume of data requires high performance and scalability.\tIn this paper, we present DCDatalog, an in-memory Datalog engine specifically designed for modern shared-memory multicore architectures. Our key contribution is a novel system architecture that supports a wide scope of Datalog applications with a light-weight coordination scheme during parallel evaluation. To this end, we propose a dynamic scheduling strategy that can generate the parallel execution plan on-the-fly while reducing concurrent accesses to the shared memory. Experimental results on several large datasets show that our system significantly outperforms existing parallel Datalog engines and also scales well with increasing amount of data.","tags":[],"title":"Optimizing Parallel Recursive Datalog Evaluation on Multicore Machines","type":"publication"},{"authors":["Jiacheng Wu","Yong Zhang","Shimin Chen","Yu Chen","Jin Wang","Chunxiao Xing"],"categories":null,"content":"","date":1629072000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629072000,"objectID":"a4e26cab664ea1d506ecb280f4d06733","permalink":"https://Jiacheng-Wu.github.io/publication/vldb21/","publishdate":"2021-08-16T00:00:00Z","relpermalink":"/publication/vldb21/","section":"publication","summary":"Index plays an essential role in modern database engines to accelerate the query processing. The new paradigm of ''learned index'' has significantly changed the way of designing index structures in DBMS. The key insight is that indexes could be regarded as learned models that predict the position of a lookup key in the dataset. While such studies show promising results in both lookup time and index size, they cannot efficiently support update operations. Although recent studies have proposed some preliminary approaches to support update, they are at the cost of scarifying the lookup performance as they suffer from the overheads brought by imprecise predictions in the leaf nodes.\nIn this paper, we propose LIPP, a brand new framework of learned index to address such issues. Similar with state-of-the-art learned index structures, LIPP is able to support all kinds of index operations, namely lookup query, range query, insert, delete, update and bulkload. Meanwhile, we overcome the limitations of previous studies by properly extending the tree structure when dealing with update operations so as to eliminate the deviation of location predicted by the models in the leaf nodes. Moreover, we further propose a dynamic adjustment strategy to ensure that the height of the tree index is tightly bounded and provide comprehensive theoretical analysis to illustrate it. We conduct an extensive set of experiments on several real-life and synthetic datasets. The results demonstrate that our method consistently outperforms state-of-the-art solutions, achieving by up to 4x for a broader class of workloads with different index operations.","tags":null,"title":"Updatable Learned Index with Precise Positions","type":"publication"},{"authors":["Jin Wang","Jiacheng Wu","Mingda Li","Jiaqi Gu","Ariyam Das","Carlo Zaniolo"],"categories":[],"content":"","date":1622419200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1622419200,"objectID":"14f3a1d99cce0c50c1bdae1180103df8","permalink":"https://Jiacheng-Wu.github.io/publication/vldbj21/","publishdate":"2021-05-31T00:00:00Z","relpermalink":"/publication/vldbj21/","section":"publication","summary":"With an escalating arms race to adopt machine learning (ML) in diverse application domains, there is an urgent need to support declarative machine learning over distributed data platforms. Toward this goal, a new framework is needed where users can specify ML tasks in a manner where programming is decoupled from the underlying algorithmic and system concerns. In this paper, we argue that declarative abstractions based on Datalog are natural fits for machine learning and propose a purely declarative ML framework with a Datalog query interface. We show that using aggregates in recursive Datalog programs entails a concise expression of ML applications, while providing a strictly declarative formal semantics. This is achieved by introducing simple conditions under which the semantics of recursive programs is guaranteed to be equivalent to that of aggregate-stratified ones. We further provide specialized compilation and planning techniques for semi-naive fixpoint computation in the presence of aggregates and optimization strategies that are effective on diverse recursive programs and distributed data platforms. To test and demonstrate these research advances, we have developed a powerful and user-friendly system on top of Apache Spark. Extensive evaluations on large-scale datasets illustrate that this approach will achieve promising performance gains while improving both programming flexibility and ease of development and deployment for ML applications.","tags":[],"title":"Formal Semantics and High Performance in Declarative Machine Learning using Datalog","type":"publication"},{"authors":["Yu Chen","Yong Zhang","Jiacheng Wu","Jin Wang","Chunxiao Xing"],"categories":[],"content":"","date":1617235200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617235200,"objectID":"d53695e040e4a55b528673ea1c812b41","permalink":"https://Jiacheng-Wu.github.io/publication/icde21/","publishdate":"2021-04-01T00:00:00Z","relpermalink":"/publication/icde21/","section":"publication","summary":"Among diverse parts in database systems, database prefetching, which aims at predicting future page access patterns and fetching pages to be accessed ahead of time to mitigate blocked I/O operations, plays a crucial role in the overall performance tuning. Existing approaches just use simple heuristic-based methods and suffer from the low hit rate and extra I/O overhead. Recently, with the emerging success of machine learning in different applications, attempts using learning-based models to augment or improve components for database systems have shed some light on this tough problem. Impressed by the enormous potential of machine learning in data management, we present an end-to-end deep learning-based framework to predict page access patterns. We model the prediction of page access as a classification problem and evaluate several variants of neural networks on the accuracy of prediction. On the basis of it, we propose a new Multi-Model framework to construct an accurate model for prefetching. On a suite of real-world database benchmarks, our neural network based prefetching model consistently outperforms existing widely used solutions in real-world database systems.","tags":[],"title":"Revisiting Data Prefetching for Database Systems with Machine Learning Techniques","type":"publication"},{"authors":["Wenwen Wang","Jiacheng Wu","Xiaoli Gong","Tao Li","Pen-Chung Yew"],"categories":[],"content":"","date":1521849600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1521849600,"objectID":"5336eb6fec7cd545426f920205314211","permalink":"https://Jiacheng-Wu.github.io/publication/vee18/","publishdate":"2018-03-24T00:00:00Z","relpermalink":"/publication/vee18/","section":"publication","summary":"The recent transition in the software industry toward dynamically generated code poses a new challenge to existing dynamic binary translation (DBT) systems. A significant re-translation overhead could be introduced due to the maintenance of the consistency between the dynamically-generated guest code and the corresponding translated host code. To address this issue, this paper presents a novel approach to optimize DBT systems for guest applications with dynamically-generated code. The proposed approach can maximize the reuse of previously translated host code to mitigate the re-translation overhead. A prototype based on such an approach has been implemented on an existing DBT system HQEMU. Experimental results on a set of JavaScript applications show that it can achieve a 1.24X performance speedup on average compared to the original HQEMU.","tags":[],"title":"Improving Dynamically-Generated Code Performance on Dynamic Binary Translators","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://Jiacheng-Wu.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]